def error = null
currentBuild.result = "SUCCESS"

esgf_ansible_url = "https://github.com/ESGF/esgf-ansible.git"
esgf_jenkins_url = "https://github.com/ESGF/esgf-jenkins.git"

data_node = "${vm_node}.llnl.gov"
index_idp_node = "${vm_node}.llnl.gov"

vm_jenkins_home = "/home/jenkins"
vm_python_path = "${vm_jenkins_home}/miniconda3/bin"

// on master
conda_path = "/var/lib/jenkins/work/miniconda3/bin"
python = "${conda_path}/python"
conf_dir = "/var/lib/jenkins/esgf"

workdir = "/var/lib/jenkins/work/esgf-ansible-jenkins"
hosts_file = "${workdir}/${vm_node}.hosts_file"

create_hosts_script = "esgf-jenkins/scripts/create_hosts_file.py"
prepare_vm = "esgf-jenkins/scripts/prepare_vm.py"
restart_vm = "esgf-jenkins/scripts/restart_vm.py"
post_install = "esgf-jenkins/scripts/run_post_install.py"
run_publisher_test = "esgf-jenkins/scripts/run_publisher_test.py"

// for running esgf-test-suite
run_esgf_test_suite = "esgf-jenkins/scripts/run_esgf_test_suite.py"
run_options = "!compute,!dl,!myproxy,!statistics"
run_options1 = "myproxy"
run_options2 = "dl"
esgf_test_suite_branch = 'master'
config_ini = '/home/jenkins/esgf/${vm_node}_config.ini'

try {
    stage('checkout') {
        node('master') {
	    withEnv(["ws=${pwd()}"]) {
		dir("esgf-ansible") {
                    git branch: "$esgf_ansible_branch", credentialsId: 'muryanto1', url: "${esgf_ansible_url}"
		}
		dir("esgf-jenkins") {
                    git branch: "master", credentialsId: 'muryanto1', url: "${esgf_jenkins_url}"
 		}
	    }
        }
    }
    stage('prepare_vm') {
        node('master') {
            withEnv(["ws=${pwd()}"]) {
                echo "...prepare_vm..."
                sh "${python} ${prepare_vm} -H ${vm_host} -x ${vmx_file} -s ${vm_snapshot} -n ${vm_node}"
		sh "scp -o StrictHostKeyChecking=no ${conf_dir}/esgf-test-suite/${vm_node}_config.ini ${vm_node}:${vm_jenkins_home}/esgf"
            }
        }
    }
    stage('install') {
        node('master') {
	    withEnv(["ws=${pwd()}"]) {
	        // create hosts file
	        def sample_hosts_file = "${ws}/esgf-ansible/sample.hosts"
	        def set_env = "export TERM=vt100; export ANSIBLE_NOCOWS=1; export ANSIBLE_HOST_KEY_CHECKING=False; export PATH=$conda_path:/sbin:/usr/sbin:$PATH"
                sh "${python} ${ws}/${create_hosts_script} -d ${data_node} -i ${index_idp_node} -o ${hosts_file}"
		sh "cp ${vars_file} ${ws}/esgf-ansible/host_vars/${data_node}.yml"
	        sh "bash -c '${set_env}; cd ${ws}/esgf-ansible; ansible-playbook -i ${hosts_file} -v -c paramiko --timeout 60 --tags index install.yml'"
		sleep 30
                sh "${python} ${restart_vm} -H ${vm_host} -x ${vmx_file} -s ${vm_snapshot} -n ${vm_node}"
		sleep 45		
            }
	}
    }
    stage('post_install') {
        node("${vm_node}") {
            withEnv(["ws=${pwd()}"]) {
                echo "...post_install..."
                sh "mkdir -p esgf-jenkins"
		dir("esgf-jenkins") {
		    git branch: "master", credentialsId: 'muryanto1', url: "${esgf_jenkins_url}"
		}
                echo "${vm_python_path}/python ${ws}/${post_install} -H ${vm_jenkins_home}"
                sh "${vm_python_path}/python ${ws}/${post_install} -H ${vm_jenkins_home}"
            }
        }
    }
    stage('start_services') {
        node('master') {
	    withEnv(["ws=${pwd()}"]) {
		def set_env = "export TERM=vt100; export ANSIBLE_NOCOWS=1; export ANSIBLE_HOST_KEY_CHECKING=False; export PATH=$conda_path:/sbin:/usr/sbin:$PATH"
		sh "bash -c '${set_env}; python --version; cd ${ws}/esgf-ansible; ansible-playbook -i ${hosts_file} -v -c paramiko --timeout 60 --tags index ${ws}/esgf-ansible/stop.yml ${ws}/esgf-ansible/start.yml'"
		sleep 180
		sh "bash -c '${set_env}; python --version; cd ${ws}/esgf-ansible; ansible-playbook -i ${hosts_file} -v -c paramiko ${ws}/esgf-ansible/status.yml'"
	    }
        }
    }
    stage('run_publisher_test') {
        node("${vm_node}") {
            withEnv(["ws=${pwd()}"]) {
                echo "...run_publisher_test..."
                sh "${vm_python_path}/python ${ws}/${run_publisher_test} -w ${vm_jenkins_home} -e esgf-pub"
            }
        }
    }
    stage('run_tests_on_vm') {
        node("${vm_node}") {
            withEnv(["ws=${pwd()}"]) {
                echo "...run_tests_on_vm..."
		sh "cat ${config_ini}"
                echo "XXX XXX run_options: ${run_options}"
		sh "${vm_python_path}/python ${ws}/${run_esgf_test_suite} -b ${esgf_test_suite_branch} -p ${vm_python_path} -o ${run_options} -w ${vm_jenkins_home} -c ${config_ini}"
		sleep 10
		sh "${vm_python_path}/python ${ws}/${run_esgf_test_suite} -b ${esgf_test_suite_branch} -p ${vm_python_path} -o ${run_options1} -w ${vm_jenkins_home} -c ${config_ini}"
		sh "${vm_python_path}/python ${ws}/${run_esgf_test_suite} -b ${esgf_test_suite_branch} -p ${vm_python_path} -o ${run_options2} -w ${vm_jenkins_home} -c ${config_ini}"
            }
        }
    }

} catch (caughtException) {
    error = caughtException
    currentBuild.result = "FAILURE"
}

