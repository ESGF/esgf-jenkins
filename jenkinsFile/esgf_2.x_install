def error = null
currentBuild.result = "SUCCESS"

def workdir = "${env.JENKINS_HOME}/testdir/${env.JOB_NAME}/test_${env.BUILD_NUMBER}"
def repo_dir = "${workdir}/repos/esgf-jenkins"
def prepare_vm = "${repo_dir}/scripts/prepare_vm.py"
def stop_vm = "${repo_dir}/scripts/stop_vm.py"
def vm_host = 'grim.llnl.gov'
//def vmx_file = '/var/lib/jenkins/vmware/esgf-lina/esgf-lina.vmx'
def vmx_file = "\"/var/lib/jenkins/vmware/CentOS 6 64-bit/CentOS 6 64-bit.vmx\""
def vm_snapshot = "SnapshotForJenkins3"
def vm_node = 'esgf-dev1'
def vm_jenkins_home = "/home/jenkins"
def run_esg_autoinstall_script = "${vm_jenkins_home}/repos/esgf-jenkins/scripts/run_2.x_esg_autoinstall.py"
def vm_python = "${vm_jenkins_home}/miniconda2/bin/python"
def url = "https://github.com/ESGF/esgf-jenkins"

try {
    stage('git_clone_esgf_jenkins') {
      node('master') {
        echo "xxx git_clone_esgf_jenkins xxx"
        sh "mkdir -p ${workdir}/repos"
        sh "cd ${workdir}/repos; git clone ${url}"
        sh "cd ${repo_dir}; git pull -u"
      }
    }
    stage('prepare_vm') {
      node('master') {
        echo "xxx prepare_vm xxx"
        sh "python ${prepare_vm} -H ${vm_host} -x ${vmx_file} -s ${vm_snapshot} -n ${vm_node}"
      }
    }
    stage('esg_bootstrap') {
      node('esgf-dev1')	{
        echo "xxx esgf_bootstrap xxx"
	sh "mkdir -p ~/repos"
        sh "cd ~/repos; git clone ${url}"
        sh "cd ~/repos/esgf-jenkins; git pull -u"
        sh "${vm_python} ~/repos/esgf-jenkins/scripts/run_2.x_esg_bootstrap.py -d 'master' -v '2.6/7'"
      } 
    }
    stage('esg_autoinstall') {
      node('esgf-dev1')	{
        echo "xxx esg_node xxx"
        sh "${vm_python} ${run_esg_autoinstall_script} -d 'master' -v '2.6/7' -w ${vm_jenkins_home}"
      } 
    }
    stage('stop_vm') {
      node('master') {
        echo "xxx stop_vm xxx"
        sh "python ${stop_vm} -H ${vm_host} -x ${vmx_file}"
      }
    }
} catch (caughtException) {
    error = caughtException
    currentBuild.result = "FAILURE"
}
