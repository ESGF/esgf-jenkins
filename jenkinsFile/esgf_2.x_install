def error = null
currentBuild.result = "SUCCESS"

def workdir = "${env.JENKINS_HOME}/testdir/${env.JOB_NAME}/test_${env.BUILD_NUMBER}"
def repo_dir = "${workdir}/repos/esgf-jenkins"
def prepare_vm = "${repo_dir}/scripts/prepare_vm.py"
def stop_vm = "${repo_dir}/scripts/stop_vm.py"
def vm_host = 'grim.llnl.gov'
def vmx_file = "/var/lib/jenkins/vmware/jenkinsVM/jenkinsVM.vmx"
def vm_snapshot = "SnapshotForJenkins9"
def vm_node = 'esgf-dev1'
def vm_jenkins_home = "/home/jenkins"
def run_esg_autoinstall_script = "${vm_jenkins_home}/repos/esgf-jenkins/scripts/run_2.x_esg_autoinstall.py"
def vm_python_path = "${vm_jenkins_home}/miniconda2/bin"
def url = "https://github.com/ESGF/esgf-jenkins"
def release = "2.6/7"
def branch = "master"
def conf_dir = "/var/lib/jenkins/esgf"
def mirror = "fr"

try {
    stage('git_clone_esgf_jenkins') {
      node('master') {
        echo "xxx git_clone_esgf_jenkins xxx"
        sh "mkdir -p ${workdir}/repos"
        sh "cd ${workdir}/repos; git clone ${url}"
        sh "cd ${repo_dir}; git pull"
      }
    }
    stage('prepare_vm') {
      node('master') {
        echo "xxx prepare_vm xxx"
        //sh "python ${prepare_vm} -H ${vm_host} -x ${vmx_file} -s ${vm_snapshot} -n ${vm_node}"
      }
    }
    stage('esg_bootstrap') {
      node('esgf-dev1') {
        echo "xxx esgf_bootstrap xxx"
	//sh "mkdir -p ~/repos"
        //sh "cd ~/repos; git clone ${url}"
        //sh "cd ~/repos/esgf-jenkins; git pull"
        //sh "${vm_python_path}/python ~/repos/esgf-jenkins/scripts/run_2.x_esg_bootstrap.py -d ${branch} -v \"${release}\" -m ${mirror}"
      }
    }
    stage('prep_for_autoinstall') {
       node('master') {
          echo "xxx prep_for_autoinstall xxx"
          //sh "ssh ${vm_node} sudo mv /usr/local/etc/esg-autoinstall.conf /usr/local/etc/esg-autoinstall.conf.ORIG"
          //sh "scp ${conf_dir}/esg-autoinstall.conf.${vm_node} ${vm_node}:/tmp/esg-autoinstall.conf"
          //sh "ssh ${vm_node} sudo mv /tmp/esg-autoinstall.conf /usr/local/etc/esg-autoinstall.conf"
       }
    }
    stage('esg_autoinstall') {
       node('esgf-dev1') {
          echo "xxx esg_autoinstall xxx"
          //sh "sudo bash -c 'export TERM=vt100; /usr/local/bin/esg-autoinstall'"
      }
    }
    stage('prep_install') {
       node('master') {
          echo "xxx prep_install xxx"
          //sh "python ${repo_dir}/scripts/prep_2.x_post_install.py -n ${vm_node} -d ${conf_dir}"
       }
    }
    stage('post_install') {
       node('esgf-dev1') {
          echo "xxx post_install xxx"
          //sh "${vm_python_path}/python ~/repos/esgf-jenkins/scripts/run_2.x_post_install_steps.py -H ${vm_jenkins_home}"
       }
    }
    stage('run_tests') {
       node('esgf-dev1') {
         sh "${vm_python_path}/python ~/repos/esgf-jenkins/scripts/run_esgf_test_suite.py -b 'master' -o '!compute,!cog_create_user,!slcs' -p ${vm_python_path}"
       }
    }
    //stage('stop_vm') {
      //node('master') {
        //echo "xxx stop_vm xxx"
        //sh "python ${stop_vm} -H ${vm_host} -x ${vmx_file}"
      //}
    //}
} catch (caughtException) {
    error = caughtException
    currentBuild.result = "FAILURE"
}

