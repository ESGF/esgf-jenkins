def error = null
currentBuild.result = "SUCCESS"

def workdir = "${env.JENKINS_HOME}/testdir/${env.JOB_NAME}/test_${env.BUILD_NUMBER}"
def repo_dir = "${workdir}/repos/esgf-jenkins"
def prepare_vm = "${repo_dir}/scripts/prepare_vm.py"
def prep_autoinstall = "${repo_dir}/scripts/prep_3.x_autoinstall.py"
def stop_vm = "${repo_dir}/scripts/stop_vm.py"
def vm_host = 'grim.llnl.gov'
def vmx_file = "/var/lib/jenkins/vmware/jenkinsVM/jenkinsVM.vmx"
def vm_snapshot = "SnapshotForJenkins9"
def vm_node = 'esgf-dev1'
def vm_jenkins_home = "/home/jenkins"
def vm_python_path = "${vm_jenkins_home}/miniconda2/bin"
def url = "https://github.com/ESGF/esgf-jenkins"
def branch = "python_devel"
def conf_dir = "/var/lib/jenkins/esgf"
def mirror = "aims"
def run_esg_autoinstall_script = "${vm_jenkins_home}/repos/esgf-jenkins/scripts/run_2.x_esg_autoinstall.py"
//def run_options = '!compute,!cog_create_user,!cog_user_login,!slcs,!dl_gridftp,!dl_http'
def run_options = '!compute,!slcs,!dl_gridftp,!dl_http'
def test_suite_node = 'pcmdi8'
def test_suite_node_jenkins_home = '/home/jenkins'
def geckodriver_path = '/home/jenkins/esgf'
def firefox_path = '/opt/firefox58'
def test_suite_node_python_path = '/home/jenkins/esgf/miniconda2/bin'
def config_ini = '/home/jenkins/esgf/my_config.ini'

try {
    stage('git_clone_esgf_jenkins') {
      node('master') {
        echo "xxx git_clone_esgf_jenkins xxx"
        sh "mkdir -p ${workdir}/repos"
        sh "cd ${workdir}/repos; git clone ${url}"
        sh "cd ${repo_dir}; git pull"
      }
    }
    stage('prepare_vm') {
      node('master') {
        echo "xxx prepare_vm xxx"
        sh "python ${prepare_vm} -H ${vm_host} -x ${vmx_file} -s ${vm_snapshot} -n ${vm_node}"
	echo "xxx done preparing vm xxx"
      }
    }
    stage('esg_bootstrap') {
      node('esgf-dev1') {
        echo "xxx esgf_bootstrap xxx xxx"
	sleep 120
	sh '''
	   mkdir -p /home/jenkins/repos
           cd /home/jenkins/repos; 
	      git clone https://github.com/ESGF/esgf-jenkins
           cd /home/jenkins/repos/esgf-jenkins
	      git pull
	         '''
        sh "${vm_python_path}/python ~/repos/esgf-jenkins/scripts/run_3.x_esg_bootstrap.py -w /home/jenkins/repos -b ${branch}"
      }
    }
    stage('prep_for_autoinstall') {
       node('master') {
          echo "xxx prep_for_autoinstall xxx"
          //sh "scp ${conf_dir}/3.x/esgf.properties.${vm_node} ${vm_node}:/tmp/esgf.properties"
	  //sh "scp ${conf_dir}/${vm_node}_config.ini ${test_suite_node}:${test_suite_node_jenkins_home}/esgf/my_config.ini"
        sh "python ${prep_autoinstall} -d ${conf_dir} -n ${vm_node} -t ${test_suite_node} -w ${test_suite_node_jenkins_home}"
       }
    }
    stage('esg_autoinstall') {
       node('esgf-dev1') {
          echo "xxx esg_autoinstall xxx"
	  sh "${vm_python_path}/python ~/repos/esgf-jenkins/scripts/vm_prep_3.x_autoinstall.py"
          sh "sudo bash -c 'export TERM=vt100; /usr/local/bin/esg-autoinstall'"
      }
    }



} catch (caughtException) {
    error = caughtException
    currentBuild.result = "FAILURE"
}
