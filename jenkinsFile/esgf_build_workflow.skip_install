
def error = null
currentBuild.result = "SUCCESS"

// parameters
// esgf_repo_url
// esgf_repo_branch

ant_cmd = "/var/lib/jenkins/work/misc/apache-ant-1.10.5/bin/ant"
java_home = "/usr/local/java"

esgf_jenkins_url = "https://github.com/esgf/esgf-jenkins.git"
esgf_jenkins_branch = "fix_esgf_build"

try {
    stage('checkout') {
        node('master') {
	    withEnv(["ws=${pwd()}"]) {
	        dir("esgf-jenkins") {
                    git branch: "$esgf_jenkins_branch", credentialsId: 'muryanto1', url: "$esgf_jenkins_url"
		}
	    }
        }
    }
    stage('build') {
        node('master') {
	    withEnv(["ws=${pwd()}"]) {
 	        dir("esgf-jenkins") {
		    def workdir = "${ws}/workdir"
                    def make_params = "workdir=${workdir} ant_cmd=${ant_cmd} java_home=${java_home}"
		    def release_tag = payload_ref
		    sh "mkdir -p ${workdir}"
		    sh "make clean workdir=${workdir} repo=${esgf_repo_url}"
		    sh "make build_assets ${make_params} repo=${esgf_repo_url} branch=${esgf_repo_branch} tag=${release_tag}"
		}
	    }
	}
    }
    stage('upload') {
        node('master') {
	    withEnv(["ws=${pwd()}"]) {
	        withCredentials([string(credentialsId: 'GITHUB_TOKEN', variable: 'GITHUB_TOKEN')]) { 
		    dir("esgf-jenkins") {
			def workdir = "${ws}/workdir"
			def release_tag = payload_ref
			def script = "${ws}/esgf-jenkins/scripts/upload_github_release_asset.bash"
			def params = "workdir=${workdir} repo=${esgf_repo_url} branch=${esgf_repo_branch} tag=${release_tag}"
			sh "make upload ${params} token=${GITHUB_TOKEN} owner=esgf"
   	            }
	        }
            }
        }
    }
} catch (caughtException) {
    error = caughtException
    currentBuild.result = "FAILURE"
}

