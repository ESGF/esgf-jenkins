def error = null
currentBuild.result = "SUCCESS"

// parameters
// esgf_repo
// esgf_repo_branch

// on master
conda2_path = "/var/lib/jenkins/work/miniconda2/bin/"
conda3_path = "/var/lib/jenkins/work/miniconda3/bin/"
python2 = "${conda2_path}/python"
python3 = "${conda3_path}/python"
ant_path = "/var/lib/jenkins/work/misc/apache-ant-1.10.5/bin"
java_home = "/usr/local/java"
java_path = "${java_home}/bin"

esgf_build_url = "https://github.com/ESGF/esgf-build.git"
esgf_build_branch = "multi_branch"
esgf_build_jenkins_url = "https://github.com/muryanto1/esgf-build-jenkins.git"
esgf_ansible_url = "https://github.com/ESGF/esgf-ansible.git"
esgf_ansible_branch = "devel"

try {
    stage('checkout') {
        node('master') {
	    withEnv(["ws=${pwd()}"]) {
	        dir("esgf-build") {
                    git branch: "$esgf_build_branch", credentialsId: 'muryanto1', url: "$esgf_build_url"
		}
	        dir("esgf-build-jenkins") {
                    git branch: "master", credentialsId: 'muryanto1', url: "$esgf_build_jenkins_url"
		}
	        dir("esgf-ansible") {
                    git branch: "$esgf_ansible_branch", credentialsId: 'muryanto1', url: "$esgf_ansible_url"
		}
	    }
        }
    }
    stage('build') {
        node('master') {
	    withEnv(["ws=${pwd()}"]) {
	        dir("esgf-build") {
		    def set_env = "export PATH=${conda2_path}:${ant_path}:${java_path}:$PATH; export JAVA_HOME=${java_home}"
		    sh "bash -c '${set_env}; which conda; which pip; git --version'"
		    sh "bash -c '${set_env}; ${conda2_path}/pip install -r requirements.txt';"
		    sh "bash -c '${set_env}; pwd'"
		    sh "bash -c '${set_env}; rm -rf ${ws}/${esgf_repo}'"
		    //sh "bash -c '${set_env}; ${conda2_path}/conda env create -f environment.yml';"
                    //sh "bash -c '${set_env}; ${python2} esgf_build.py -d ${ws} -b ${esgf_repo_branch} --prerelease --synctag --upload ${esgf_repo}'"
		    sh "bash -c '${set_env}; ${python2} esgf_build.py -d ${ws} -b ${esgf_repo_branch} --prerelease --upload ${esgf_repo}'"
		}
	    }
        }
    }
    stage('ansible_install') {
        node('master') {
	    withEnv(["ws=${pwd()}"]) {
	        dir("esgf-ansible") {

		}
	    }
        }
    }
} catch (caughtException) {
    error = caughtException
    currentBuild.result = "FAILURE"
}