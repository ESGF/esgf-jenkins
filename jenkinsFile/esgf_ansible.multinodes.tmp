def error = null
currentBuild.result = "SUCCESS"

esgf_ansible_url = "https://github.com/ESGF/esgf-ansible.git"
//esgf_ansible_branch = "ncarlson"
esgf_jenkins_url = "https://github.com/ESGF/esgf-jenkins.git"

// from parameters
//data_node = "${vm_node}.llnl.gov"
//index_idp_node = "${vm_node}.llnl.gov"
//data_node_vmx_file = "/var/lib/jenkins/vmware/${vm_node}/${vm_node}.vmx"
//data_node_vm_snapshot = "SnapshotForJenkins"
//index_idp_node_vmx_file
//index_idp_node_vmx_snapshot

vm_node = "${data_node}"
fqdn_data_node = "${data_node}.llnl.gov"
fqdn_index_idp_node = "${index_idp_node}.llnl.gov"

vm_host = "grim.llnl.gov"
vm_jenkins_home = "/home/jenkins"
vm_python_path = "${vm_jenkins_home}/miniconda2/bin"

// on master
conda_path = "/var/lib/jenkins/work/miniconda3/bin"
python = "${conda_path}/python"
conf_dir = "/var/lib/jenkins/esgf"

workdir = "/var/lib/jenkins/work/esgf-ansible-jenkins"
hosts_file = "${workdir}/${data_node}.hosts_file"

create_hosts_script = "esgf-jenkins/scripts/create_hosts_file.py"
prepare_vm = "esgf-jenkins/scripts/prepare_vm.py"
post_install = "esgf-jenkins/scripts/run_post_install.py"
run_publisher_test = "esgf-jenkins/scripts/run_publisher_test.py"
run_myproxy_logon = "esgf-jenkins/scripts/run_myproxy_logon.py"
// for running esgf-test-suite
run_esgf_test_suite = "esgf-jenkins/scripts/run_esgf_test_suite.py"
run_options = "!compute,!dl,!myproxy"
run_options1 = "myproxy"
run_options2 = "dl"
esgf_test_suite_branch = 'master'
//config_ini = '/home/jenkins/esgf/${vm_node}_config.ini'

try {
    stage('checkout') {
        node('master') {
	    withEnv(["ws=${pwd()}"]) {
		dir("esgf-ansible") {
                    git branch: "$esgf_ansible_branch", credentialsId: 'muryanto1', url: "${esgf_ansible_url}"
		}
		dir("esgf-jenkins") {
                    git branch: "master", credentialsId: 'muryanto1', url: "${esgf_jenkins_url}"
 		}
	    }
        }
    }
    stage('prepare_vm') {
        node('master') {
            withEnv(["ws=${pwd()}"]) {
                echo "...prepare_vm..."
                //sh "${python} ${prepare_vm} -H ${vm_host} -x ${data_node_vmx_file} -s ${data_node_vm_snapshot} -n ${data_node}"
                //sh "${python} ${prepare_vm} -H ${vm_host} -x ${index_idp_node_vmx_file} -s ${index_idp_node_vm_snapshot} -n ${index_idp_node}"
		//sh "scp -o StrictHostKeyChecking=no ${conf_dir}/esgf-test-suite/${data_node}_config.ini ${data_node}:${vm_jenkins_home}/esgf"
		//sh "scp -o StrictHostKeyChecking=no ${conf_dir}/esgf-test-suite/${index_idp_node}_config.ini ${index_idp_node}:${vm_jenkins_home}/esgf"
            }
        }
    }
    stage('install') {
        node('master') {
	    withEnv(["ws=${pwd()}"]) {
	        // create hosts file
	        def sample_hosts_file = "${ws}/esgf-ansible/sample.hosts"
	        def set_env = "export TERM=vt100; export ANSIBLE_NOCOWS=1; export ANSIBLE_HOST_KEY_CHECKING=False; export PATH=$conda_path:/sbin:/usr/sbin:$PATH"
                sh "${python} ${ws}/${create_hosts_script} -d ${fqdn_data_node} -i ${fqdn_index_idp_node} -o ${hosts_file}"
 		sh "cp ${conf_dir}/ansible/configs/${data_node}.vars ${ws}/esgf-ansible/host_vars/${fqdn_data_node}.yml"
 		sh "cp ${conf_dir}/ansible/configs/${index_idp_node}.vars ${ws}/esgf-ansible/host_vars/${fqdn_index_idp_node}.yml"
		sh "scp ${conf_dir}/ansible/configs/${index_idp_node}.vars ${data_node}:${vm_jenkins_home}/${fqdn_index_idp_node}.yml"
	        //sh "bash -c '${set_env}; ansible-playbook -i ${hosts_file} -v -u root -c paramiko ${ws}/esgf-ansible/install.yml'"  
            }
	}
    }
    stage('post_install') {
        node("${index_idp_node}") {
            withEnv(["ws=${pwd()}"]) {
                echo "...post_install..."
                //sh "mkdir esgf-jenkins"
		dir("esgf-jenkins") {
		    git branch: "master", credentialsId: 'muryanto1', url: "${esgf_jenkins_url}"
		}
                echo "${vm_python_path}/python ${ws}/${post_install} -H ${vm_jenkins_home}"
                //sh "${vm_python_path}/python ${ws}/${post_install} -H ${vm_jenkins_home}"
            }
        }
        node("${vm_node}") {
            withEnv(["ws=${pwd()}"]) {
                echo "...post_install..."
                //sh "mkdir esgf-jenkins"
		dir("esgf-jenkins") {
		    git branch: "master", credentialsId: 'muryanto1', url: "${esgf_jenkins_url}"
		}
            }
        }
    }
    stage('start_services') {
        node('master') {
	    withEnv(["ws=${pwd()}"]) {
		def set_env = "export TERM=vt100; export ANSIBLE_NOCOWS=1; export ANSIBLE_HOST_KEY_CHECKING=False; export PATH=$conda_path:/sbin:/usr/sbin:$PATH"
		//sh "bash -c '${set_env}; python --version; ansible-playbook -i ${hosts_file} -v -u root -c paramiko ${ws}/esgf-ansible/start.yml'"
	    }
        }
    }
    stage('run_publisher_test') {
        node("${vm_node}") {
            withEnv(["ws=${pwd()}"]) {
		//sleep 120
                echo "...run_publisher_test..."
		sh "${vm_python_path}/python ${ws}/${run_myproxy_logon} -f ${vm_jenkins_home}/${fqdn_index_idp_node}.yml -x ${fqdn_index_idp_node} -w ${vm_jenkins_home}"
                sh "${vm_python_path}/python ${ws}/${run_publisher_test} -w ${vm_jenkins_home} -e esgf-pub "
            }
        }
    }
    stage('run_tests_on_vm') {
        node("${vm_node}") {
            withEnv(["ws=${pwd()}"]) {
                echo "...run_tests_on_vm..."
		//sh "${vm_python_path}/python ${ws}/${run_esgf_test_suite} -b ${esgf_test_suite_branch} -p ${vm_python_path} -o ${run_options} -w ${vm_jenkins_home} -c ${config_ini}"
		//sleep 10
		//sh "${vm_python_path}/python ${ws}/${run_esgf_test_suite} -b ${esgf_test_suite_branch} -p ${vm_python_path} -o ${run_options1} -w ${vm_jenkins_home} -c ${config_ini}"
		//sh "${vm_python_path}/python ${ws}/${run_esgf_test_suite} -b ${esgf_test_suite_branch} -p ${vm_python_path} -o ${run_options2} -w ${vm_jenkins_home} -c ${config_ini}"
            }
        }
    }

} catch (caughtException) {
    error = caughtException
    currentBuild.result = "FAILURE"
}

