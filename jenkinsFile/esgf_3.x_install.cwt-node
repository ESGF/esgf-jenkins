def error = null
currentBuild.result = "SUCCESS"

def esgf_jenkins_branch = 'master'

def prepare_vm = "scripts/prepare_vm.py"
def run_bootstrap = "scripts/run_3.x_esg_bootstrap.py"
def prep_autoinstall = "scripts/prep_3.x_autoinstall.py"
def vm_prep_autoinstall = "scripts/vm_prep_3.x_autoinstall.py"
def post_install = "scripts/run_3.x_post_install_steps.py"
def run_publisher_test = "scripts/run_publisher_test.py"
def run_esgf_test_suite = "scripts/run_esgf_test_suite.py"

def vm_host = 'grim.llnl.gov'
def vmx_file = "/var/lib/jenkins/vmware/cwt-node/cwt-node.vmx"
def vm_snapshot = "cwt-node.snapshot6"
def vm_node = 'cwt-node'
def vm_jenkins_home = "/home/jenkins"
def vm_python_path = "${vm_jenkins_home}/miniconda2/bin"
def vm_conda_path = "/usr/local/conda/bin"
def esgf_jenkins_url = "https://github.com/ESGF/esgf-jenkins.git"
def branch = "ncarlson_devel"
def conf_dir = "/var/lib/jenkins/esgf"
def mirror = "aims"
def run_options = '!compute,!slcs,!dl_gridftp,!dl_http'
def test_suite_node = 'pcmdi8'
def test_suite_node_jenkins_home = '/home/jenkins'
def geckodriver_path = '/home/jenkins/esgf'
def firefox_path = '/opt/firefox58'
def test_suite_node_python_path = '/home/jenkins/esgf/miniconda2/bin'
def config_ini = '/home/jenkins/esgf/cwt-node_config.ini'

try {
    stage('checkout') {
        node('master') {
            echo "...git_clone_esgf_jenkins..."
            git branch: "$esgf_jenkins_branch", credentialsId: 'muryanto1', url: "${esgf_jenkins_url}"
        }
    }
    stage('prepare_vm') {
        node('master') {
            withEnv(["ws=${pwd()}"]) {
                echo "...prepare_vm..."
                sh "python ${ws}/${prepare_vm} -H ${vm_host} -x ${vmx_file} -s ${vm_snapshot} -n ${vm_node}"
            }
        }
    }
    stage('esg_bootstrap') {
        node('cwt-node') {
            withEnv(["ws=${pwd()}"]) {
                echo "...esg_bootstrap..."
		sleep 120
                git branch: "${esgf_jenkins_branch}", credentialsId: 'muryanto1', url: "${esgf_jenkins_url}"
                sh "${vm_python_path}/python ${ws}/${run_bootstrap} -w ${ws} -b ${branch}"
            }
        }
    }    
    stage('prep_for_autoinstall') {
        node('master') {
            withEnv(["ws=${pwd()}"]) {
                echo "...prep_for_autoinstall..."
	        sh "python ${ws}/${prep_autoinstall} -d ${conf_dir} -n ${vm_node} -t ${test_suite_node} -w ${test_suite_node_jenkins_home}"
            }
        }
    }
    stage('esg_autoinstall') {
        node('cwt-node') {
            withEnv(["ws=${pwd()}"]) {
                echo "...esg_autoinstall..."
		sh "${vm_python_path}/python ${ws}/${vm_prep_autoinstall}"
	    	sh "sudo bash -c 'export TERM=vt100; export PATH=${vm_conda_path}:/sbin:/usr/sbin:$PATH; cd ${ws}/esgf-installer; source /usr/local/conda/bin/activate esgf-pub; python esg_node.py --install --type all'" 
            }
        }
    }
    stage('post_install') {
        node('cwt-node') {
            withEnv(["ws=${pwd()}"]) {
                echo "...post_install..."
                sh "${vm_python_path}/python ${ws}/${post_install} -H ${vm_jenkins_home}"
	    	sh "sudo bash -c 'export TERM=vt100; export PATH=${vm_conda_path}:/sbin:/usr/sbin:$PATH; cd ${ws}/esgf-installer; source /usr/local/conda/bin/activate esgf-pub; python esg_node.py --restart'" 
		sleep 60
            }
        }
    }
    stage('run_publisher_test') {
        node('cwt-node') {
            withEnv(["ws=${pwd()}"]) {
                echo "...run_publisher_test..."
                sh "${vm_python_path}/python ${ws}/${run_publisher_test} -w ${vm_jenkins_home} -e esgf-pub"
            }
        }
    }
    stage('run_esgf_test_suite') {
        node('pcmdi8') {
            withEnv(["ws=${pwd()}"]) {
                echo "...run_esgf_test_suite..."
                git branch: "${esgf_jenkins_branch}", credentialsId: 'muryanto1', url: "${esgf_jenkins_url}"
	        sh "${test_suite_node_python_path}/python ${run_esgf_test_suite} -b 'master' -p ${test_suite_node_python_path} -o ${run_options} -f ${firefox_path} -g ${geckodriver_path} -w ${test_suite_node_jenkins_home} -c ${config_ini}"
	        sh "${test_suite_node_python_path}/python ${run_esgf_test_suite} -b 'master' -p ${test_suite_node_python_path} -o ${run_options1} -f ${firefox_path} -g ${geckodriver_path} -w ${test_suite_node_jenkins_home} -c ${config_ini}"
           }
       }
    }
} catch (caughtException) {
    error = caughtException
    currentBuild.result = "FAILURE"
}

