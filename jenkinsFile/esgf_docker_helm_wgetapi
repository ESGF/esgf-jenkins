// parameters
// esgf_wget_branch, ex: "add_parameterized_tests"
// esgf_docker_branch, ex: "wget_api_install_values"
// wget_api_host_url, ex: "https://nimbus15.llnl.gov:8443"
// esgf_jenkins_branch, ex: "add_esgf_docker"

esgf_wget_url = "https://github.com/esgf/esgf-wget.git"

// esgf_docker_url is the github repo of esgf-docker that has the helm chart to be tested.
// This workflow assumes there is a 'deploy/kubernetes/chart/my_values.yaml' under that repo.
esgf_docker_url = "https://github.com/muryanto1/esgf-docker.git"

esgf_jenkins_url = "https://github.com/esgf/esgf-jenkins.git"

pipeline {
  agent none
  environment {
    REGISTRY = "${env.BRANCH_NAME == "master" ? env.REGISTRY_PUBLIC : env.REGISTRY_PRIVATE}"
    CACHE_TYPE = "local"
    CACHE_PATH = "/nfs/buildkit-cache"
  }
  stages {
    stage("Deploy") {
      agent {
        label "utils"
      }
      steps {
        container(name: "utils") {
          withEnv(["ws=${pwd()}"]) {	
            dir("esgf-docker") {
              git branch: "${esgf_docker_branch}", url: "${esgf_docker_url}"
            }
            dir("esgf-jenkins") {
              git branch: "${esgf_jenkins_branch}", url: "${esgf_jenkins_url}"
            }	  
            lock("development") {
              dir("esgf-docker") {
                sh """
helm repo add stable https://charts.helm.sh/stable --ca-file /ssl/cspca.crt
helm dependency build deploy/kubernetes/chart
cp ${ws}/configs/esgf-docker/helm/values.yaml deploy/kubernetes/chart/my_values.yaml
cat deploy/kubernetes/chart/my_values.yaml
helm -n development delete esgf || exit 1
helm -n development install esgf deploy/kubernetes/chart -f deploy/kubernetes/chart/my_values.yaml --wait --timeout 300
              """
              }
	    }
          }
        }
      } 
    }
    stage("Test") {
      agent {
        label "jenkins-conda"
      }
      steps {
        container("conda") {
	  withEnv(["ws=${pwd()}"]) {
            dir("esgf-wget") {
              echo "...sleep for 20 seconds to give the containers to come up fully..."
              sleep 20
              git branch: "${esgf_wget_branch}", url: "${esgf_wget_url}"
              sh "conda update -n base -c defaults conda -y"
	      sh "conda install -n base -c conda-forge pytest wget curl"
	      sh "export WGET_API_HOST_URL=${wget_api_host_url}; pytest --capture=tee-sys --data ${ws}/esgf-wget/tests/test_data/test_download.json tests/tests/test_download.py"
	      sh "export WGET_API_HOST_URL=${wget_api_host_url}; pytest --capture=tee-sys --data ${ws}/esgf-wget/tests/test_data/test_download.json tests/tests/test_download_not_allowed.py"
            }
          }
        }
      }
    }      
  }
}
